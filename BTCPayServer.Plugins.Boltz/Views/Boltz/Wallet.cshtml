@using BTCPayServer.Plugins.Boltz.Views
@using Boltzrpc
@using BTCPayServer.Abstractions.Models
@using BTCPayServer.Abstractions.TagHelpers
@using BTCPayServer.Client
@using BTCPayServer.Components
@using BTCPayServer.Plugins.Boltz
@using BTCPayServer.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BTCPayServer.Plugins.Boltz.Models.WalletViewModel
@inject DisplayFormatter DisplayFormatter
@inject BoltzService BoltzService
@{
    var storeId = Context.GetCurrentStoreId();
    var confirmModel = new ConfirmModel("Delete Wallet", "This action will remove the wallet. You will not be able to recover them if you don't have a backup.", "Delete");
    var isNodeWallet = Model.Wallet.Name == "CLN" || Model.Wallet.Name == "LND";
}

<partial name="_Confirm" model="@confirmModel"/>

<div class="d-sm-flex align-items-center justify-content-between">
    <div>
        <h2 class="mb-1">@Model.Wallet.Name</h2>
        <div class="text-muted fw-semibold" data-sensitive>
            <span>@BoltzClient.CurrencyName(Model.Wallet.Currency) @(Model.Wallet.Readonly ? "Watch-only wallet" : "Hot wallet")</span>
            @DisplayFormatter.Currency(Model.Wallet.Balance.Total, "SATS")
        </div>
    </div>
    <div class="d-flex gap-3 mt-3 mt-sm-0" permission="@Policies.CanModifyStoreSettings">
        @if (!Model.Wallet.Readonly)
        {
            <a class="btn btn-primary" asp-action="WalletSend" asp-route-walletId="@Model.Wallet.Id" asp-route-storeId="@storeId">Send</a>
        }
        <a class="btn btn-primary" asp-action="WalletReceive" asp-route-walletId="@Model.Wallet.Id" asp-route-storeId="@storeId">Receive</a>
        @if (!isNodeWallet)
        {
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="ActionsDropdownToggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Actions
                </button>
                <div class="dropdown-menu" aria-labelledby="ActionsDropdownToggle">
                    @if (!Model.Wallet.Readonly)
                    {
                        <a asp-action="WalletCredentials" asp-route-walletId="@Model.Wallet.Id" asp-route-storeId="@storeId" class="dropdown-item">View seed</a>
                    }
                    <form method="post" asp-action="Wallet" asp-route-walletId="@Model.Wallet.Id" asp-route-storeId="@storeId" class="d-inline">
                        <div type="button"
                             id="Delete"
                             class="dropdown-item"
                             data-bs-toggle="modal"
                             data-bs-target="#ConfirmModal"
                             data-title="Remove wallet"
                             data-description="Remove this wallet"
                             data-confirm="Remove"
                             data-confirm-input="REMOVE">
                            Remove wallet
                        </div>
                    </form>
                </div>
            </div>
        }
    </div>
</div>

@if (Model.Transactions.Count == 0)
{
    <p class="text-secondary mt-3">
        No transactions available.
    </p>
}
else
{
    <div id="WalletTransactions" class="table-responsive-md">
        <table class="table table-hover">
            <thead>
            <tr>
                <th class="date-col">
                    <div class="d-flex align-items-center gap-1">
                        Date
                        <button type="button" class="btn btn-link p-0 fa fa-clock-o switch-time-format only-for-js" title="Switch date format"></button>
                    </div>
                </th>
                <th class="text-start">Info</th>
                <th>Transaction Id</th>
                <th class="amount-col">Amount</th>
                <th></th>
            </tr>
            </thead>
            <tbody id="WalletTransactionsList">
            @foreach (var transaction in Model.Transactions)
            {
                <tr>
                    <td class="date-col">
                        @DateTimeOffset.FromUnixTimeSeconds(transaction.Timestamp).ToBrowserDate()
                    </td>
                    <td class="text-start">
                        @foreach (var info in transaction.Infos)
                        {
                            var badgeType = info.Type switch
                            {
                                TransactionType.Claim => "primary",
                                TransactionType.Lockup => "primary",
                                TransactionType.Refund => "warning",
                                TransactionType.Consolidation => "info",
                                _ => "secondary",
                            };
                            <span class="badge bg-@badgeType">@info.Type</span>
                            @if (info.HasSwapId)
                            {
                                <a asp-action="Swaps" asp-route-swapId="@info.SwapId" asp-route-storeId="@storeId">
                                    @info.SwapId
                                </a>
                            }
                        }
                    </td>
                    <td class="smMaxWidth text-truncate@(transaction.BlockHeight > 0 ? "" : " unconf")">
                        <a href="@BoltzService.GetTransactionLink(Model.Wallet.Currency, transaction.Id)" target="_blank" rel="noreferrer noopener">
                            @transaction.Id
                        </a>
                    </td>
                    <td class="amount-col">
                        <span data-sensitive class="text-@(transaction.BalanceChange > 0 ? "success" : "danger")">
                            @Math.Abs(transaction.BalanceChange)
                        </span>
                    </td>
                </tr>
            }

            </tbody>
        </table>
    </div>

    <vc:pager view-model="Model"/>
}