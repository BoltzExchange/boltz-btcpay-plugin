@using BTCPayServer.Abstractions.Extensions
@using BTCPayServer.Plugins.Boltz
@using BTCPayServer.Plugins.Boltz.Models
@using BTCPayServer.Plugins.Boltz.Views
@using BTCPayServer.Security
@model BTCPayServer.Plugins.Boltz.Models.BoltzInfo
@inject BoltzService BoltzService
@{
    ViewData.SetActivePage("Boltz", "Info", "Info");

    var storeId = Context.GetImplicitStoreId();

    var settings = BoltzService.GetSettings(storeId);
}

<div class="d-flex flex-column gap-3">
    @if (Model.Status is not null)
    {
        var ln = new AutoSwapStatus { Name = "Lightning", Status = Model.Status.Lightning };
        var chain = new AutoSwapStatus { Name = "Chain", Status = Model.Status.Chain };
        <div class="widget">
            <h4 class="mb-3">Autoswap</h4>
            <div class="d-flex flex-column gap-4">
                @if (Model.Ln is not null)
                {
                    <partial name="Boltz/_AutoSwapStatus" model="ln"/>
                }

                @if (Model.Chain is not null)
                {
                    <partial name="Boltz/_AutoSwapStatus" model="chain"/>
                }
            </div>
        </div>
    }
    @if (settings?.Mode == BoltzMode.Standalone)
    {
        <div class="widget">
            <partial name="Boltz/_SwapStats"/>
        </div>
        <div class="widget">
            <partial name="Boltz/_Fees"/>
        </div>
    }

    <div class="widget">
        <h4>Reverse Swaps</h4>
        <div class="invoice-payments table-responsive mt-0">
            <table class="table table-hover mb-0">
                <thead>
                <tr>
                    <th class="w-75px">ID</th>
                    <th class="w-75px">From</th>
                    <th class="w-75px">To</th>
                    <th class="w-175px">State</th>
                    <th class="text-nowrap">Status</th>
                    <th class="w-100px">Amount</th>
                </tr>
                </thead>
                <tbody>
                @if (Model.Swaps is not null)
                {
                    @if (Model.Swaps?.ReverseSwaps?.Count > 0)
                    {
                        @foreach (var payment in Model.Swaps.ReverseSwaps)
                        {
                            <tr >
                                <td>@payment.Id</td>
                                <td>@payment.Pair.From</td>
                                <td>@payment.Pair.To</td>
                                <td>@payment.State</td>
                                <td>@payment.Status</td>
                                <td>@payment.OnchainAmount</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <p>No reverse swaps avilable</p>
                    }

                    @foreach (var payment in Model.Swaps.ChainSwaps)
                    {
                        <tr >
                            <td>@payment.Id</td>
                            <td>@payment.Pair.From</td>
                            <td>@payment.Pair.To</td>
                            <td>@payment.State</td>
                            <td>@payment.Status</td>
                            <td>@payment.FromData.Amount</td>
                        </tr>
                    }

                    @foreach (var payment in Model.Swaps.Swaps)
                    {
                        <tr>
                            <td>@payment.Id</td>
                            <td>@payment.Pair.From</td>
                            <td>@payment.Pair.To</td>
                            <td>@payment.State</td>
                            <td>@payment.Status</td>
                            <td>@payment.ExpectedAmount</td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
    </div>
</div>