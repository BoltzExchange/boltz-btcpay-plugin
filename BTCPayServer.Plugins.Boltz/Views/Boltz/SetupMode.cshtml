@using BTCPayServer.Security
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BTCPayServer.Plugins.Boltz
@model BTCPayServer.Plugins.Boltz.Models.ModeSetup
@inject BoltzService BoltzService
@{
    Layout = "_LayoutSetup";
    var storeId = Context.GetImplicitStoreId();
    /*
    var canUseInternal = await AuthorizationService.AuthorizeAsync(ViewContext.HttpContext.User null,
        new PolicyRequirement(Policies.CanUseInternalLightningNode));
    */
}

<h1 class="text-center">Get Started with Boltz</h1>


<p class="text-secondary">
    You can use Boltz to automatically rebalance your existing Lightning node or start accepting Lightning payments without running a Lightning node.
</p>

@if (!BoltzService.Daemon.Running)
{
    <div class="alert alert-danger">
        <p>Daemon is not yet running</p>
    </div>
}
else
{
    @if (BoltzService.Daemon.NodeError is not null)
    {
        <div class="alert alert-danger">@BoltzService.Daemon.NodeError</div>
    }

    @if (BoltzService.Daemon.LatestStderr is not null)
    {
        <div class="alert alert-danger">@BoltzService.Daemon.LatestStdout</div>
        <div class="alert alert-danger">@BoltzService.Daemon.LatestStderr</div>
    }

    <div class="mt-4">
        <div class="list-group">
            <a asp-controller="Boltz" asp-action="SetupMode" asp-route-storeId="@storeId" asp-route-mode="Rebalance" class="list-group-item list-group-item-action @(Model.AllowRebalance ? "" : "disabled")">
                <div class="image">
                    <vc:icon symbol="existing-wallet"/>
                </div>
                <div class="content">
                    <h4>Rebalance existing Lightning node</h4>
                    <div class="d-flex flex-column gap-2">
                        <p class="mb-0 text-secondary">This sets up automated rebalancing for the Lightning node connected to your BTCPay instance, to make sure you always have enough Liquidity to reliably process payments.</p>
                        @if (!Model.AllowRebalance)
                        {
                            var tooltip = Model.IsAdmin
                                ? Model.RebalanceStore is null
                                    ? Model.HasInternal
                                        ? "Could not connect to internal node"
                                        : "No internal node available"
                                    : $"Internal Node is already being rebalanced in store {Model.RebalanceStore.StoreName}"
                                : "Only available for admins";
                            <small class="d-block text-danger mt-2 mt-lg-0">@tooltip</small>
                        }
                    </div>
                </div>
                <vc:icon symbol="caret-right"/>
            </a>
        </div>
    </div>

    <br>
    <div class="mt-4">
        <div class="list-group">
            <a asp-controller="Boltz" asp-action="SetupMode" asp-route-storeId="@storeId" asp-route-mode="Standalone" class="list-group-item list-group-item-action @(Model.AllowStandalone ? "" : "disabled")">
                <div class="image">
                    <vc:icon symbol="new-wallet"/>
                </div>
                <div class="content">
                    <h4>Accept Lightning payments without running a node</h4>
                    <div class="d-flex flex-column gap-2">
                        <p class="mb-0 text-secondary">This sets up Lightning payments using Boltz. Lightning payments are processed using non-custodial swaps, meaning you stay in full control at all times. Supports read-only cold wallets.</p>
                        @if (!Model.AllowStandalone)
                        {
                            <small class="d-block text-danger mt-2 mt-lg-0">Lightning node already connected</small>
                        }
                    </div>
                </div>

                <vc:icon symbol="caret-right"/>
            </a >
        </div >
    </div >
}