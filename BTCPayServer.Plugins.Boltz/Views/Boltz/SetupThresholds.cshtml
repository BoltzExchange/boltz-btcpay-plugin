@using Microsoft.AspNetCore.Mvc.TagHelpers
@model BTCPayServer.Plugins.Boltz.Models.BalanceSetup
@{
    Layout = "_LayoutSetup";
    ViewData["Title"] = "Configure Rebalancing Thresholds";
    ViewData["Description"] = "Set the thresholds for your rebalancing";

    var unitPercent = "in % of total capacity";
    var unitSats = "in sats";
}

@if (Model.BalanceType is null)
{
}

<form method="post" class="mt-3">

    <div class="form-group">
        <label class="form-label">How do you want to specify thresholds?</label>
        <select id="balanceTypeSelect" asp-items="@(new SelectList(new []{"percentage", "sats"}))" class="form-control"></select>
    </div>

    @if (Model.Ln.SwapType != "normal")
    {
        <div class="form-group percentage">
            <label asp-for="Ln.InboundBalancePercent" class="form-label">Minimum Inbound Balance (@unitPercent)</label>
            <input type="number" min="1" max="100" asp-for="Ln.InboundBalancePercent" class="form-control"></input>
            <span asp-validation-for="Ln.InboundBalancePercent" class="text-danger"></span>
        </div>

        <div class="form-group absolute">
            <label asp-for="Ln.InboundBalance" class="form-label">Minimum Inbound Balance (@unitSats)</label>
            <input type="number" asp-for="Ln.InboundBalance" class="form-control"></input>
            <span asp-validation-for="Ln.InboundBalance" class="text-danger"></span>
        </div>
    }

    @if (Model.Ln.SwapType != "reverse")
    {
        <div class="form-group percentage">
            <label asp-for="Ln.OutboundBalancePercent" class="form-label">Minimum Outbound Balance (@unitPercent)</label>
            <input type="number" min="1" max="100" asp-for="Ln.OutboundBalancePercent" class="form-control"></input>
            <span asp-validation-for="Ln.OutboundBalancePercent" class="text-danger"></span>
        </div>

        <div class="form-group absolute">
            <label asp-for="Ln.OutboundBalance" class="form-label">Minimum Outbound Balance (@unitSats)</label>
            <input type="number" asp-for="Ln.OutboundBalance" class="form-control"></input>
            <span asp-validation-for="Ln.OutboundBalance" class="text-danger"></span>
        </div>
    }

    <button type="submit" class="btn btn-success">
        Continue
    </button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const balanceTypeSelect = $('#balanceTypeSelect');
        const percentage = $('.percentage');
        const absolute = $('.absolute');

        const update = () => {
            if (balanceTypeSelect.val() === 'percentage') {
                absolute.hide();
                percentage.show()
            } else {
                percentage.hide();
                absolute.show()
            }
        }

        update()
        balanceTypeSelect.change(update)
    })
</script>