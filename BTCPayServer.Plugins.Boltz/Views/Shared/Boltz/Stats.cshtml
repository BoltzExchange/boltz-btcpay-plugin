@using BTCPayServer.Plugins.Boltz.Models
@using BTCPayServer.Plugins.Boltz
@using BTCPayServer.Security
@using Boltzrpc
@inject BoltzService BoltzService
@model StoreDashboardViewModel
@{
    var storeId = Context.GetImplicitStoreId();
    Wallet wallet = null;
    
    var client = BoltzService.GetClient(storeId);
    if (client is not null)
    {
        wallet = await client.GetAutoSwapWallet();
    }
}
<div id="StoreBoltzStats-@Model.StoreId" class="widget store-numbers" style="grid-column-start: 1; grid-column-end: 4">
    @if (wallet != null)
    {
    <div class="balances d-flex flex-wrap">
        <div class="balance">
            <div class="d-flex align-items-baseline gap-1">
                <h3 class="d-inline-block me-1" data-sensitive>@wallet.Balance.Total</h3>
                <span class="text-secondary fw-semibold text-nowrap">
                    <span class="currency">@wallet.Currency</span> in total
                </span>
            </div>
        </div>
    </div>
    }
    else
    {
        <div class="loading d-flex justify-content-center p-3">
            <div class="spinner-border text-light" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
</div>