@using BTCPayServer.Plugins.Boltz.Models
@using BTCPayServer.Plugins.Boltz
@using BTCPayServer.Security
@using Boltzrpc
@using Autoswaprpc
@inject BoltzService BoltzService
@model StoreDashboardViewModel
@{
    var storeId = Context.GetImplicitStoreId();
    Wallet wallet = null;
    Status autoSwapStatus = null;
    GetInfoResponse info = null;

    var client = BoltzService.GetClient(storeId);
    if (client is not null)
    {
        wallet = await client.GetAutoSwapWallet();
        var status = await client.GetAutoSwapStatus();
        autoSwapStatus = status.Lightning;
        info = await client.GetInfo();
    }
}
<div id="StoreBoltzInfo-@Model.StoreId" class="widget flex-column gap-3" style="grid-column-start: 1; grid-column-end: 4">
    @if (Model is StoreDashboardViewModel)
    {
        <header>
            <h4>Boltz</h4>
            <a asp-action="Index" asp-controller="Boltz" asp-route-storeId="@storeId">
                Manage
            </a>
        </header>
    }
    @if (autoSwapStatus != null)
    {
    <div class="d-flex w-100 align-items-center justify-content-start gap-3">
        <span class="btcpay-status @(autoSwapStatus.Running ? "btcpay-status--enabled" : "btcpay-status--disabled")"></span>
        <h6 class="text-truncate">Autoswap (@autoSwapStatus.Running ? "Running" : "Stopped"</h6>
    </div>
    }
    @if (wallet != null)
    {
        <div class="balances d-flex flex-wrap">
            <div class="balance">
                <div class="d-flex align-items-baseline gap-1">
                    <h3 class="d-inline-block me-1" data-sensitive>@wallet.Balance.Total</h3>
                    <span class="text-secondary fw-semibold text-nowrap">
                        <span class="currency">@wallet.Currency</span> in total
                    </span>
                </div>
            </div>
        </div>
    }
</div>