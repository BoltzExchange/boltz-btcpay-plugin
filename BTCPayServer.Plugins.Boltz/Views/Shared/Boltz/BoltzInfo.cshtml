@using BTCPayServer.Plugins.Boltz
@using BTCPayServer.Plugins.Boltz.Models
@using BTCPayServer.Security
@using Grpc.Core
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject BoltzService BoltzService
@model StoreDashboardViewModel

<div style="grid-column-start: 1; grid-column-end: 13">

    @if (BoltzService.Daemon.HasError)
    {
        @if (User.IsInRole(Roles.ServerAdmin))
        {
            <a asp-controller="Boltz" asp-action="Admin" asp-route-storeId="@Context.GetImplicitStoreId()"
                class="alert alert-danger d-block">
                Boltz Client not running
            </a>
        }
        else
        {
            <div class="alert alert-danger">
                <p>Boltz Client not running, tell a server admin.</p>
            </div>
        }
    }
    <partial name="Boltz/_Notification" />
</div>


@try
{
    var storeId = Context.GetImplicitStoreId();
    var client = BoltzService.GetClient(storeId);
    var settings = BoltzService.GetSettings(storeId);
    if (client is null || settings is null) return;

    var (ln, chain) = await client.GetAutoSwapConfig();
    var lnConfigured = ln != null;
    var chainConfigured = chain != null;
    var isStandalone = settings.Mode == BoltzMode.Standalone;

    @if ((isStandalone && chainConfigured) || (lnConfigured && chainConfigured))
    {
        <style>
            @@media(min - width: 1400px) {
                .widget.boltz-lightning {
                    grid-column-start: 1;
                    grid-column-end: 7;
                }

                .widget.boltz-chain {
                    grid-column-start: 7;
                    grid-column-end: 13;
                }
            }
        </style>
    }

    @if (isStandalone)
    {
        var stats = await client.GetStats();
        <div id="StoreBoltzLightning-@Model.StoreId" class="widget boltz-lightning">
            <header>
                <div class="d-flex align-items-center justify-content-start gap-2">
                    <span class="btcpay-status btcpay-status--enabled"></span>
                    <h6 class="text-truncate">Lightning Payments</h6>
                </div>
                <a asp-action="Index" asp-controller="Boltz" asp-route-storeId="@storeId">
                    Manage
                </a>
            </header>
            <partial name="Boltz/_Stats" model="@BoltzClient.ParseStats(stats)" />
        </div>
    }


    @if (lnConfigured || chainConfigured)
    {
        var status = await client.GetAutoSwapStatus();

        @if (lnConfigured)
        {
            var lnStatus = new AutoSwapStatus { SwapperType = SwapperType.Lightning, Status = status.Lightning, Compact = true };
            <div id="StoreBoltzLightning-@Model.StoreId" class="widget boltz-lightning">
                <partial name="Boltz/_AutoSwapStatus" model="lnStatus"></partial>
            </div>
        }

        @if (chainConfigured)
        {
            var chainStatus = new AutoSwapStatus { SwapperType = SwapperType.Chain, Status = status.Chain, Compact = true };
            <div id="StoreBoltzChain-@Model.StoreId" class="widget boltz-chain">
                <partial name="Boltz/_AutoSwapStatus" model="chainStatus" />
            </div>
        }
    }
}
catch (Exception)
{
    <div style="grid-column-start: 1; grid-column-end: 13">
        @if (User.IsInRole(Roles.ServerAdmin))
        {
            <a asp-controller="Boltz" asp-action="Admin" asp-route-storeId="@Context.GetImplicitStoreId()"
                class="alert alert-danger d-block">
                Boltz connection not working
            </a>
        }
        else
        {
            <div class="alert alert-danger">
                <p>Boltz connection not working, tell a server admin.</p>
            </div>
        }
    </div>
}