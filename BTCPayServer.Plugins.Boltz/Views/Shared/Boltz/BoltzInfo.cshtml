@using BTCPayServer.Plugins.Boltz
@using BTCPayServer.Plugins.Boltz.Models
@using BTCPayServer.Security
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject BoltzService BoltzService
@model StoreDashboardViewModel
@{
    var storeId = Context.GetImplicitStoreId();
    var client = BoltzService.GetClient(storeId);
}

<div id="StoreBoltzInfo-@Model.StoreId" class="widget flex-column gap-3" style="grid-column-start: 1; grid-column-end: 4">
    @if (client is not null)
    {
        var info = await client.GetInfo();

        <header>
            <h4>Boltz</h4>
            <a asp-action="Index" asp-controller="Boltz" asp-route-storeId="@storeId">
                Manage
            </a>
        </header>

        @if (info.ClaimableSwaps.Count > 0 || info.RefundableSwaps.Count > 0)
        {
        }

        var (ln, chain) = await client.GetAutoSwapConfig();
        @if (ln is not null || chain is not null)
        {
            var status = await client.GetAutoSwapStatus();
            if (ln is not null)
            {
                var lnStatus = new AutoSwapStatus { Name = "Lightning", Status = status.Lightning, Compact = true };
                <partial name="Boltz/_AutoSwapStatus" model="lnStatus"/>
            }

            if (chain is not null)
            {
                var chainStatus = new AutoSwapStatus { Name = "Chain", Status = status.Chain, Compact = true };
                <partial name="Boltz/_AutoSwapStatus" model="chainStatus"/>
            }
        }
    }
</div>